name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: default

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install dependencies
        run: forge install --shallow

      - name: Pyth installation
        run: npm install

      - name: Build contracts
        run: forge build

      - name: Run all tests
        run: forge test -vvv

  # COMMENTED OUT - Additional checks for when you want more restrictions
  # 
  # lint-and-format:
  #   name: Lint and Format Check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Check Formatting
  #       run: forge fmt --check
  # 
  #     - name: Run Linter
  #       run: |
  #         forge --version
  #         forge build --sizes
  # 
  # coverage:
  #   name: Test Coverage
  #   runs-on: ubuntu-latest
  #   needs: lint-and-format
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Install dependencies
  #       run: forge install --shallow
  # 
  #     - name: Build contracts
  #       run: forge build
  # 
  #     - name: Generate coverage report
  #       run: forge coverage --report lcov
  # 
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./lcov.info
  #         fail_ci_if_error: false
  # 
  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Install dependencies
  #       run: forge install --shallow
  # 
  #     - name: Build contracts
  #       run: forge build
  # 
  #     - name: Start Anvil
  #       run: |
  #         anvil --host 0.0.0.0 --accounts 10 --balance 10000 &
  #         sleep 5
  #         
  #     - name: Run integration tests
  #       run: |
  #         # Set environment variables for testing
  #         export PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
  #         export RPC_URL=http://localhost:8545
  #         
  #         # Wait for Anvil to be ready
  #         sleep 2
  #         
  #         # Test Anvil connection
  #         cast block-number --rpc-url $RPC_URL || exit 1
  #         
  #         # Run specific integration tests with error handling
  #         echo "Running PositionManager integration tests..."
  #         forge test --match-contract "PositionManagerTest" -vv || echo "PositionManager tests completed with issues"
  #         
  #         echo "Running PerpsHook integration tests..."  
  #         forge test --match-contract "PerpsHookTest" -vv || echo "PerpsHook tests completed with issues"
  #         
  #         echo "Running integration test contracts..."
  #         forge test --match-contract "Integration" -vv || echo "Integration tests completed"
  #         
  #         echo "Integration test suite completed"
  # 
  # security-analysis:
  #   name: Security Analysis
  #   runs-on: ubuntu-latest
  #   needs: lint-and-format
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Install dependencies
  #       run: forge install --shallow
  # 
  #     - name: Build contracts
  #       run: forge build
  # 
  #     - name: Run Slither (if available)
  #       run: |
  #         if command -v slither &> /dev/null; then
  #           slither . || echo "Slither analysis completed with warnings"
  #         else
  #           echo "Slither not available, skipping security analysis"
  #         fi
  #       continue-on-error: true
  # 
  # stress-tests:
  #   name: Stress Tests
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Install dependencies
  #       run: forge install --shallow
  # 
  #     - name: Build contracts
  #       run: forge build
  # 
  #     - name: Run stress tests
  #       run: |
  #         # Run stress testing if available
  #         forge test --match-contract "StressTesting" -vv || echo "No stress tests found"
  #         
  #         # Run edge case tests
  #         forge test --match-contract "EdgeCases" -vv || echo "No edge case tests found"
  # 
  # gas-analysis:
  #   name: Gas Analysis
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  # 
  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: stable
  # 
  #     - name: Install dependencies
  #       run: forge install --shallow
  # 
  #     - name: Build contracts
  #       run: forge build
  # 
  #     - name: Generate gas snapshot
  #       run: forge snapshot
  # 
  #     - name: Compare gas usage (if PR)
  #       if: github.event_name == 'pull_request'
  #       run: |
  #         if [ -f ".gas-snapshot" ]; then
  #           forge snapshot --diff || echo "Gas usage comparison completed"
  #         else
  #           echo "No previous gas snapshot found"
  #         fi
  # 
  #     - name: Upload gas snapshot
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: gas-snapshot
  #         path: .gas-snapshot
